{"ast":null,"code":"var _jsxFileName = \"/home/azio724/Documents/React/FoodApp/src/store/cart-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const cartContext = /*#__PURE__*/React.createContext({\n  items: [],\n  amount: 0,\n  addItem: item => {},\n  removeItem: id => {}\n});\nconst defaultState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotal = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotal\n    };\n  }\n\n  return defaultState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [items, dispatchItems] = useReducer(cartReducer, defaultState);\n\n  const addItemHandler = item => {\n    dispatchItems({\n      action: \"ADD_ITEM\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchItems({\n      action: \"REMOVE_ITEM\",\n      id: id\n    });\n  };\n\n  const contextItems = {\n    items: items.items,\n    amount: items.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(cartContext.Provider, {\n    value: contextItems,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"4A0BCA5cZZYcycm1n/Pd/GZKiDc=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/azio724/Documents/React/FoodApp/src/store/cart-context.js"],"names":["React","useReducer","cartContext","createContext","items","amount","addItem","item","removeItem","id","defaultState","totalAmount","cartReducer","state","action","type","updatedItems","concat","updatedTotal","price","CartProvider","props","dispatchItems","addItemHandler","removeItemHandler","contextItems","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AAC7CC,EAAAA,KAAK,EAAE,EADsC;AAE7CC,EAAAA,MAAM,EAAE,CAFqC;AAG7CC,EAAAA,OAAO,EAAGC,IAAD,IAAU,CAAE,CAHwB;AAI7CC,EAAAA,UAAU,EAAGC,EAAD,IAAQ,CAAE;AAJuB,CAApB,CAApB;AAMP,MAAMC,YAAY,GAAG;AAAEN,EAAAA,KAAK,EAAE,EAAT;AAAaO,EAAAA,WAAW,EAAE;AAA1B,CAArB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,UAAMC,YAAY,GAAGH,KAAK,CAACT,KAAN,CAAYa,MAAZ,CAAmBH,MAAM,CAACP,IAA1B,CAArB;AACA,UAAMW,YAAY,GAChBL,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACP,IAAP,CAAYY,KAAZ,GAAoBL,MAAM,CAACP,IAAP,CAAYF,MADtD;AAEA,WAAO;AAAED,MAAAA,KAAK,EAAEY,YAAT;AAAuBL,MAAAA,WAAW,EAAEO;AAApC,KAAP;AACD;;AACD,SAAOR,YAAP;AACD,CARD;;AASA,MAAMU,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACjB,KAAD,EAAQkB,aAAR,IAAyBrB,UAAU,CAACW,WAAD,EAAcF,YAAd,CAAzC;;AAEA,QAAMa,cAAc,GAAIhB,IAAD,IAAU;AAC/Be,IAAAA,aAAa,CAAC;AAAER,MAAAA,MAAM,EAAE,UAAV;AAAsBP,MAAAA,IAAI,EAAEA;AAA5B,KAAD,CAAb;AACD,GAFD;;AAGA,QAAMiB,iBAAiB,GAAIf,EAAD,IAAQ;AAChCa,IAAAA,aAAa,CAAC;AAAER,MAAAA,MAAM,EAAE,aAAV;AAAyBL,MAAAA,EAAE,EAAEA;AAA7B,KAAD,CAAb;AACD,GAFD;;AAGA,QAAMgB,YAAY,GAAG;AACnBrB,IAAAA,KAAK,EAAEA,KAAK,CAACA,KADM;AAEnBC,IAAAA,MAAM,EAAED,KAAK,CAACO,WAFK;AAGnBL,IAAAA,OAAO,EAAEiB,cAHU;AAInBf,IAAAA,UAAU,EAAEgB;AAJO,GAArB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,YAA7B;AAAA,cACGJ,KAAK,CAACK;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApBD;;GAAMN,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\n\nexport const cartContext = React.createContext({\n  items: [],\n  amount: 0,\n  addItem: (item) => {},\n  removeItem: (id) => {},\n});\nconst defaultState = { items: [], totalAmount: 0 };\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotal =\n      state.totalAmount + action.item.price * action.item.amount;\n    return { items: updatedItems, totalAmount: updatedTotal };\n  }\n  return defaultState;\n};\nconst CartProvider = (props) => {\n  const [items, dispatchItems] = useReducer(cartReducer, defaultState);\n\n  const addItemHandler = (item) => {\n    dispatchItems({ action: \"ADD_ITEM\", item: item });\n  };\n  const removeItemHandler = (id) => {\n    dispatchItems({ action: \"REMOVE_ITEM\", id: id });\n  };\n  const contextItems = {\n    items: items.items,\n    amount: items.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler,\n  };\n  return (\n    <cartContext.Provider value={contextItems}>\n      {props.children}\n    </cartContext.Provider>\n  );\n};\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}